<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.milkt.onelab.organization.dao.RegionDao">

<resultMap id="regionDOResult" type="io.milkt.onelab.organization.domain.RegionDO">
    <result column="name" property="name"/>
    <result column="parent" property="parent"/>
    <result column="adcode" property="adcode"/>
    <result column="latitude" property="latitude"/>
    <result column="longitude" property="longitude"/>
    <result column="level" property="level"/>
    <result column="pinyin" property="pinyin"/>
    <result column="citycode" property="citycode"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="regionDO_columns">
    name,
    parent,
    adcode,
    latitude,
    longitude,
    level,
    pinyin,
    citycode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="regionDO_sqlForInsert">
    name,
    parent,
    adcode,
    latitude,
    longitude,
    level,
    pinyin,
    citycode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="regionDO_columnsForInsert">
    #{name},
    #{parent},
    #{adcode},
    #{latitude},
    #{longitude},
    #{level},
    #{pinyin},
    #{citycode},
    #{id},
    now(),
    now()
</sql>

<sql id="regionDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="name != null">
            name = #{name},
        </if>
        <if test="parent != null">
            parent = #{parent},
        </if>
        <if test="adcode != null">
            adcode = #{adcode},
        </if>
        <if test="latitude != null">
            latitude = #{latitude},
        </if>
        <if test="longitude != null">
            longitude = #{longitude},
        </if>
        <if test="level != null">
            level = #{level},
        </if>
        <if test="pinyin != null">
            pinyin = #{pinyin},
        </if>
        <if test="citycode != null">
            citycode = #{citycode},
        </if>
    </set>
</sql>

<sql id="regionDO_selector">
    select
    <include refid="regionDO_columns"/>
    from address
</sql>

<sql id="regionDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.name != null">
            AND name = #{data.name}
        </if>
        <if test="data.parent != null">
            AND parent = #{data.parent}
        </if>
        <if test="data.adcode != null">
            AND adcode = #{data.adcode}
        </if>
        <if test="data.latitude != null">
            AND latitude = #{data.latitude}
        </if>
        <if test="data.longitude != null">
            AND longitude = #{data.longitude}
        </if>
        <if test="data.level != null">
            AND level = #{data.level}
        </if>
        <if test="data.pinyin != null">
            AND pinyin = #{data.pinyin}
        </if>
        <if test="data.citycode != null">
            AND citycode = #{data.citycode}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    insert into address
    (
        <include refid="regionDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="regionDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    update address
    <include refid="regionDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    update address
    <set>
        gmt_modified = now(),
        <if test="update.name != null">
            name = #{update.name},
        </if>
        <if test="update.parent != null">
            parent = #{update.parent},
        </if>
        <if test="update.adcode != null">
            adcode = #{update.adcode},
        </if>
        <if test="update.latitude != null">
            latitude = #{update.latitude},
        </if>
        <if test="update.longitude != null">
            longitude = #{update.longitude},
        </if>
        <if test="update.level != null">
            level = #{update.level},
        </if>
        <if test="update.pinyin != null">
            pinyin = #{update.pinyin},
        </if>
        <if test="update.citycode != null">
            citycode = #{update.citycode},
        </if>
    </set>
    <include refid="regionDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    insert into address
    (
        <include refid="regionDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="regionDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="name != null">
        ,name = #{name}
    </if>
    <if test="parent != null">
        ,parent = #{parent}
    </if>
    <if test="adcode != null">
        ,adcode = #{adcode}
    </if>
    <if test="latitude != null">
        ,latitude = #{latitude}
    </if>
    <if test="longitude != null">
        ,longitude = #{longitude}
    </if>
    <if test="level != null">
        ,level = #{level}
    </if>
    <if test="pinyin != null">
        ,pinyin = #{pinyin}
    </if>
    <if test="citycode != null">
        ,citycode = #{citycode}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update address
    set is_delete = 1, gmt_modified = now()
    <include refid="regionDO_query_segment"/>
</update>
<update id="deleteById">
    update address
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="regionDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="regionDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="regionDOResult" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    <include refid="regionDO_selector"/>
    <include refid="regionDO_query_segment"/>
    <include refid="regionDO_groupBy"/>
    <include refid="regionDO_orderby"/>
</select>

<select id="query4Page" resultMap="regionDOResult" parameterType="io.milkt.onelab.organization.domain.RegionDO">
    <include refid="regionDO_selector"/>
    <include refid="regionDO_query_segment"/>
    <include refid="regionDO_groupBy"/>
    <include refid="regionDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM address
    <include refid="regionDO_query_segment"/>
</select>

<select id="getById" resultMap="regionDOResult">
    <include refid="regionDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="regionDOResult">
    <include refid="regionDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
