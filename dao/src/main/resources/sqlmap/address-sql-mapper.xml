<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.milkt.onelab.organization.dao.AddressDao">

<resultMap id="addressDOResult" type="io.milkt.onelab.organization.domain.AddressDO">
    <result column="province_adcode" property="provinceAdcode"/>
    <result column="province_name" property="provinceName"/>
    <result column="city_adcode" property="cityAdcode"/>
    <result column="city_name" property="cityName"/>
    <result column="district_adcode" property="districtAdcode"/>
    <result column="district_name" property="districtName"/>
    <result column="detail_address" property="detailAddress"/>
    <result column="latitude" property="latitude"/>
    <result column="longitude" property="longitude"/>
    <result column="geohash" property="geohash"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="addressDO_columns">
    province_adcode,
    province_name,
    city_adcode,
    city_name,
    district_adcode,
    district_name,
    detail_address,
    latitude,
    longitude,
    geohash,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="addressDO_sqlForInsert">
    province_adcode,
    province_name,
    city_adcode,
    city_name,
    district_adcode,
    district_name,
    detail_address,
    latitude,
    longitude,
    geohash,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="addressDO_columnsForInsert">
    #{provinceAdcode},
    #{provinceName},
    #{cityAdcode},
    #{cityName},
    #{districtAdcode},
    #{districtName},
    #{detailAddress},
    #{latitude},
    #{longitude},
    #{geohash},
    #{id},
    now(),
    now()
</sql>

<sql id="addressDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="provinceAdcode != null">
            province_adcode = #{provinceAdcode},
        </if>
        <if test="provinceName != null">
            province_name = #{provinceName},
        </if>
        <if test="cityAdcode != null">
            city_adcode = #{cityAdcode},
        </if>
        <if test="cityName != null">
            city_name = #{cityName},
        </if>
        <if test="districtAdcode != null">
            district_adcode = #{districtAdcode},
        </if>
        <if test="districtName != null">
            district_name = #{districtName},
        </if>
        <if test="detailAddress != null">
            detail_address = #{detailAddress},
        </if>
        <if test="latitude != null">
            latitude = #{latitude},
        </if>
        <if test="longitude != null">
            longitude = #{longitude},
        </if>
        <if test="geohash != null">
            geohash = #{geohash},
        </if>
    </set>
</sql>

<sql id="addressDO_selector">
    select
    <include refid="addressDO_columns"/>
    from address
</sql>

<sql id="addressDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.provinceAdcode != null">
            AND province_adcode = #{data.provinceAdcode}
        </if>
        <if test="data.provinceName != null">
            AND province_name = #{data.provinceName}
        </if>
        <if test="data.cityAdcode != null">
            AND city_adcode = #{data.cityAdcode}
        </if>
        <if test="data.cityName != null">
            AND city_name = #{data.cityName}
        </if>
        <if test="data.districtAdcode != null">
            AND district_adcode = #{data.districtAdcode}
        </if>
        <if test="data.districtName != null">
            AND district_name = #{data.districtName}
        </if>
        <if test="data.detailAddress != null">
            AND detail_address = #{data.detailAddress}
        </if>
        <if test="data.latitude != null">
            AND latitude = #{data.latitude}
        </if>
        <if test="data.longitude != null">
            AND longitude = #{data.longitude}
        </if>
        <if test="data.geohash != null">
            AND geohash = #{data.geohash}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    insert into address
    (
        <include refid="addressDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="addressDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    update address
    <include refid="addressDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    update address
    <set>
        gmt_modified = now(),
        <if test="update.provinceAdcode != null">
            province_adcode = #{update.provinceAdcode},
        </if>
        <if test="update.provinceName != null">
            province_name = #{update.provinceName},
        </if>
        <if test="update.cityAdcode != null">
            city_adcode = #{update.cityAdcode},
        </if>
        <if test="update.cityName != null">
            city_name = #{update.cityName},
        </if>
        <if test="update.districtAdcode != null">
            district_adcode = #{update.districtAdcode},
        </if>
        <if test="update.districtName != null">
            district_name = #{update.districtName},
        </if>
        <if test="update.detailAddress != null">
            detail_address = #{update.detailAddress},
        </if>
        <if test="update.latitude != null">
            latitude = #{update.latitude},
        </if>
        <if test="update.longitude != null">
            longitude = #{update.longitude},
        </if>
        <if test="update.geohash != null">
            geohash = #{update.geohash},
        </if>
    </set>
    <include refid="addressDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    insert into address
    (
        <include refid="addressDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="addressDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="provinceAdcode != null">
        ,province_adcode = #{provinceAdcode}
    </if>
    <if test="provinceName != null">
        ,province_name = #{provinceName}
    </if>
    <if test="cityAdcode != null">
        ,city_adcode = #{cityAdcode}
    </if>
    <if test="cityName != null">
        ,city_name = #{cityName}
    </if>
    <if test="districtAdcode != null">
        ,district_adcode = #{districtAdcode}
    </if>
    <if test="districtName != null">
        ,district_name = #{districtName}
    </if>
    <if test="detailAddress != null">
        ,detail_address = #{detailAddress}
    </if>
    <if test="latitude != null">
        ,latitude = #{latitude}
    </if>
    <if test="longitude != null">
        ,longitude = #{longitude}
    </if>
    <if test="geohash != null">
        ,geohash = #{geohash}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update address
    set is_delete = 1, gmt_modified = now()
    <include refid="addressDO_query_segment"/>
</update>
<update id="deleteById">
    update address
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="addressDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="addressDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="addressDOResult" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    <include refid="addressDO_selector"/>
    <include refid="addressDO_query_segment"/>
    <include refid="addressDO_groupBy"/>
    <include refid="addressDO_orderby"/>
</select>

<select id="query4Page" resultMap="addressDOResult" parameterType="io.milkt.onelab.organization.domain.AddressDO">
    <include refid="addressDO_selector"/>
    <include refid="addressDO_query_segment"/>
    <include refid="addressDO_groupBy"/>
    <include refid="addressDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM address
    <include refid="addressDO_query_segment"/>
</select>

<select id="getById" resultMap="addressDOResult">
    <include refid="addressDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="addressDOResult">
    <include refid="addressDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
